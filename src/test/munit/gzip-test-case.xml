<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:compression="http://www.mulesoft.org/schema/mule/compression"
      xmlns:file="http://www.mulesoft.org/schema/mule/file"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
      http://www.mulesoft.org/schema/mule/compression http://www.mulesoft.org/schema/mule/compression/current/mule-compression.xsd">

    <munit:config name="gzip.xml"/>

    <munit:test name="compress-gzip">
        <munit:behavior>
            <file:read config-ref="test-resources" path="file.txt" outputMimeType="text/plain"/>
            <set-variable variableName="fileTxtSize" value="#[attributes.size]"/>
        </munit:behavior>
        <munit:execution>
            <compression:compress>
                <compression:compressor>
                    <compression:gzip-compressor/>
                </compression:compressor>
            </compression:compress>
            <set-variable variableName="compressed" value="#[payload]"/>
            <file:write config-ref="tmp-dir" path="file-txt.gz"/>
            <file:read config-ref="tmp-dir" path="file-txt.gz"/>
            <set-variable variableName="compressedFileSize" value="#[attributes.size]"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.fileTxtSize]" is="#[MunitTools::greaterThan(vars.compressedFileSize)]"/>
            <munit-tools:assert-that expression="#[vars.compressed]" is="#[MunitTools::withMediaType('application/gzip')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="decompress-gzip">
        <munit:behavior>
            <file:read config-ref="test-resources" path="file.txt.gz"/>
        </munit:behavior>
        <munit:execution>
            <compression:decompress outputMimeType="text/plain">
                <compression:decompressor>
                    <compression:gzip-decompressor/>
                </compression:decompressor>
            </compression:decompress>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert>
                <munit-tools:that>
                    #[
                        import * from dw::test::Asserts
                         ---
                        payload must equalToResource("file.txt", "text/plain")
                    ]
                </munit-tools:that>
            </munit-tools:assert>
        </munit:validation>
    </munit:test>

</mule>
