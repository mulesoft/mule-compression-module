<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xmlns:compression="http://www.mulesoft.org/schema/mule/compression"
      xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/compression http://www.mulesoft.org/schema/mule/compression/current/mule-compression.xsd">

    <munit:config name="zip.xml"/>

    <flow name="zip">
        <compression:zip />
    </flow>

    <flow name="unzip">
        <compression:unzip />
    </flow>

    <munit:test name="progateMimeType">
        <munit:behavior >
            <set-payload value="#[output application/json --- { message : 'a json message'}]"/>
            <set-variable variableName="originalMessage" value="#[payload]"/>
        </munit:behavior>
        <munit:execution>
            <compression:zip />
            <compression:unzip />
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload.^mimeType]" is="#[MunitTools::equalTo(vars.originalMessage.^mimeType)]"/>
            <munit-tools:assert-that expression="#[payload.message]" is="#[MunitTools::equalTo('a json message')]"/>
        </munit:validation>
    </munit:test>

</mule>
